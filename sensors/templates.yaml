- platform: template
  sensors:
    #
    # Smoke and Carbon Monixide Detectors
    #
    smoke_upstairs_status:
      friendly_name: "Smoke Upstairs Status"
      value_template: >-
        {% if is_state("binary_sensor.upstairs_smoke_smoke_alarm_smoke_detected", "on") %}
          smoke
        {% else %}
          idle
        {% endif %}
      icon_template: >-
        {% if is_state("binary_sensor.upstairs_smoke_smoke_alarm_smoke_detected", "on") %}
          mdi:fire
        {% else %}
          mdi:smoke-detector
        {% endif %}

    smoke_main_level_status:
      friendly_name: "Smoke Main Level Status"
      value_template: >-
        {% if is_state("binary_sensor.main_level_smoke_smoke_alarm_smoke_detected", "on") %}
          smoke
        {% else %}
          idle
        {% endif %}
      icon_template: >-
        {% if is_state("binary_sensor.main_level_smoke_smoke_alarm_smoke_detected", "on") %}
          mdi:fire
        {% else %}
          mdi:smoke-detector
        {% endif %}

    smoke_downstairs_status:
      friendly_name: "Smoke Downstairs Status"
      value_template: >-
        {% if is_state("binary_sensor.downstairs_smoke_smoke_alarm_smoke_detected", "on") %}
          smoke
        {% else %}
          idle
        {% endif %}
      icon_template: >-
        {% if is_state("binary_sensor.downstairs_smoke_smoke_alarm_smoke_detected", "on") %}
          mdi:fire
        {% else %}
          mdi:smoke-detector
        {% endif %}

    driveway_motion_detected:
      friendly_name: "Driveway Motion Status"
      value_template: >-
        {% if not is_state("sensor.driveway_floodlight_sensor_burglar", "0")%}
          motion
        {% else %}
          sleep
        {% endif %}
      icon_template: >-
        {% if not is_state("sensor.driveway_floodlight_sensor_burglar", "0")%}
          mdi:motion-sensor
        {% else %}
          mdi:sleep
        {% endif %}

    inner_garage_status:
      friendly_name: "Inner Garage Sensor"
      value_template: >-
        {% if is_state("binary_sensor.inner_garage_access_control_window_door_is_open", "on")%}
          open
        {% else %}
          closed
        {% endif %}
      icon_template: >-
        {% if is_state("binary_sensor.inner_garage_access_control_window_door_is_open", "on")%}
          mdi:garage-open-variant
        {% else %}
          mdi:garage-variant
        {% endif %}

    outer_garage_status:
      friendly_name: "Outer Garage Sensor"
      value_template: >-
        {% if is_state("binary_sensor.outer_garage_access_control_window_door_is_open", "on")%}
          open
        {% else %}
          closed
        {% endif %}
      icon_template: >-
        {% if is_state("binary_sensor.outer_garage_access_control_window_door_is_open", "on")%}
          mdi:garage-open-variant
        {% else %}
          mdi:garage-variant
        {% endif %}

    water_gpm:
      friendly_name: "Water Usage Gallons Per Minute"
      unit_of_measurement: 'gpm'
#      value_template: "{{ states('var.water_usage_rate') }}"
      value_template: "999999"

    water_shutoff:
      friendly_name: "Water Main Shutoff"
      value_template: >-
        {% if is_state("switch.water_shutoff_switch", "off")%}
          open
        {% else %}
          closed
        {% endif %}
      icon_template: >-
        {% if is_state("switch.water_shutoff_switch", "off")%}
          mdi:valve-open
        {% else %}
          mdi:valve-closed
        {% endif %}
        

    zwave_failures:
      value_template: >
        {% macro is_failed() %}
        {%- set value = true -%}
        {%- set domains = ['zwave'] -%}
        {%- for domain in domains -%}
        {%- for item in states[domain] if ((item.attributes.is_failed is defined and item.attributes['is_failed'] == value))-%}
        {% if (item.attributes.is_failed is defined and item.attributes['is_failed'] == value) -%}
        {{ item.name }}{% endif -%}
        {%- endfor -%}
        {%- endfor -%}
        {% endmacro %}
        {{ is_failed() |trim != "" }}

    failed_zwave:
      value_template: >
        {{ states | selectattr("entity_id", "search", "node_status") |
           selectattr('state', 'in', 'dead, unavailable, unknown') |
           map(attribute='entity_id') | list }}

